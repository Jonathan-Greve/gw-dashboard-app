// source: Player.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.gw_messages.Player');
goog.provide('proto.gw_messages.Player.FactionTeam');
goog.provide('proto.gw_messages.Player.MapInstanceType');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.gw_messages.Position');

goog.forwardDeclare('proto.gw_messages.Profession');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gw_messages.Player = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gw_messages.Player, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.gw_messages.Player.displayName = 'proto.gw_messages.Player';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gw_messages.Player.prototype.toObject = function(opt_includeInstance) {
  return proto.gw_messages.Player.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gw_messages.Player} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gw_messages.Player.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    agentId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    position: (f = msg.getPosition()) && proto.gw_messages.Position.toObject(includeInstance, f),
    primaryProfession: jspb.Message.getFieldWithDefault(msg, 4, 0),
    secondaryProfession: jspb.Message.getFieldWithDefault(msg, 5, 0),
    level: jspb.Message.getFieldWithDefault(msg, 6, 0),
    factionTeam: jspb.Message.getFieldWithDefault(msg, 7, 0),
    energyRegen: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    currentEnergy: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    maxEnergy: jspb.Message.getFieldWithDefault(msg, 10, 0),
    healthRegen: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    currentHealth: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    maxHealth: jspb.Message.getFieldWithDefault(msg, 13, 0),
    mapInstanceType: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gw_messages.Player}
 */
proto.gw_messages.Player.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gw_messages.Player;
  return proto.gw_messages.Player.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gw_messages.Player} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gw_messages.Player}
 */
proto.gw_messages.Player.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAgentId(value);
      break;
    case 3:
      var value = new proto.gw_messages.Position;
      reader.readMessage(value,proto.gw_messages.Position.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 4:
      var value = /** @type {!proto.gw_messages.Profession} */ (reader.readEnum());
      msg.setPrimaryProfession(value);
      break;
    case 5:
      var value = /** @type {!proto.gw_messages.Profession} */ (reader.readEnum());
      msg.setSecondaryProfession(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 7:
      var value = /** @type {!proto.gw_messages.Player.FactionTeam} */ (reader.readEnum());
      msg.setFactionTeam(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEnergyRegen(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurrentEnergy(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxEnergy(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHealthRegen(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCurrentHealth(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxHealth(value);
      break;
    case 14:
      var value = /** @type {!proto.gw_messages.Player.MapInstanceType} */ (reader.readEnum());
      msg.setMapInstanceType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gw_messages.Player.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.gw_messages.Player.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.gw_messages.Player} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.gw_messages.Player.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.gw_messages.Position.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.gw_messages.Profession} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.gw_messages.Profession} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {!proto.gw_messages.Player.FactionTeam} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {!proto.gw_messages.Player.MapInstanceType} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeEnum(
      14,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.gw_messages.Player.FactionTeam = {
  NONE: 0,
  BLUE: 1,
  RED: 2,
  YELLOW: 3
};

/**
 * @enum {number}
 */
proto.gw_messages.Player.MapInstanceType = {
  OUTPOST: 0,
  EXPLORABLE: 1,
  LOADIN: 2
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.gw_messages.Player.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 agent_id = 2;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getAgentId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setAgentId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearAgentId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasAgentId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Position position = 3;
 * @return {?proto.gw_messages.Position}
 */
proto.gw_messages.Player.prototype.getPosition = function() {
  return /** @type{?proto.gw_messages.Position} */ (
    jspb.Message.getWrapperField(this, proto.gw_messages.Position, 3));
};


/**
 * @param {?proto.gw_messages.Position|undefined} value
 * @return {!proto.gw_messages.Player} returns this
*/
proto.gw_messages.Player.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Profession primary_profession = 4;
 * @return {!proto.gw_messages.Profession}
 */
proto.gw_messages.Player.prototype.getPrimaryProfession = function() {
  return /** @type {!proto.gw_messages.Profession} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.gw_messages.Profession} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setPrimaryProfession = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearPrimaryProfession = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasPrimaryProfession = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Profession secondary_profession = 5;
 * @return {!proto.gw_messages.Profession}
 */
proto.gw_messages.Player.prototype.getSecondaryProfession = function() {
  return /** @type {!proto.gw_messages.Profession} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.gw_messages.Profession} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setSecondaryProfession = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearSecondaryProfession = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasSecondaryProfession = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 level = 6;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setLevel = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearLevel = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FactionTeam faction_team = 7;
 * @return {!proto.gw_messages.Player.FactionTeam}
 */
proto.gw_messages.Player.prototype.getFactionTeam = function() {
  return /** @type {!proto.gw_messages.Player.FactionTeam} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.gw_messages.Player.FactionTeam} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setFactionTeam = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearFactionTeam = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasFactionTeam = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float energy_regen = 8;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getEnergyRegen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setEnergyRegen = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearEnergyRegen = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasEnergyRegen = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float current_energy = 9;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getCurrentEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setCurrentEnergy = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearCurrentEnergy = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasCurrentEnergy = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 max_energy = 10;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getMaxEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setMaxEnergy = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearMaxEnergy = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasMaxEnergy = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float health_regen = 11;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getHealthRegen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setHealthRegen = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearHealthRegen = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasHealthRegen = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float current_health = 12;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getCurrentHealth = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setCurrentHealth = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearCurrentHealth = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasCurrentHealth = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 max_health = 13;
 * @return {number}
 */
proto.gw_messages.Player.prototype.getMaxHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setMaxHealth = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearMaxHealth = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasMaxHealth = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional MapInstanceType map_instance_type = 14;
 * @return {!proto.gw_messages.Player.MapInstanceType}
 */
proto.gw_messages.Player.prototype.getMapInstanceType = function() {
  return /** @type {!proto.gw_messages.Player.MapInstanceType} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.gw_messages.Player.MapInstanceType} value
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.setMapInstanceType = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.gw_messages.Player} returns this
 */
proto.gw_messages.Player.prototype.clearMapInstanceType = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.gw_messages.Player.prototype.hasMapInstanceType = function() {
  return jspb.Message.getField(this, 14) != null;
};


